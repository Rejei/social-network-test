{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","id","name","className","style","dialog","active","Message","message","maxLength100","maxLengthCreator","AddMessageForm","onSubmit","validate","render","handleSubmit","pristine","submitting","component","Textarea","placeholder","type","disabled","Dialogs","dialogsPage","addMessage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","newMessageBody","composeValidators","required","compose","dispatch","addMessageCreator"],"mappings":"2OAKIA,EAA6B,SAACC,GAAD,MAAY,CAEzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAI,eAJT,GAEXC,IAAML,WAStC,OAFmCM,YAAQX,EAARW,CAAoCL,K,oBClB3EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,2HCUpMC,EANI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACrB,OAAO,qBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,OAA3C,SACP,cAAC,IAAD,CAASX,GAAI,WAAaM,EAA1B,SAA+BC,OCCpBK,EALC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEd,OAAO,qBAAKL,UAAWC,IAAMC,OAAtB,SAA+BG,K,wBCItCC,EAAeC,YAAiB,KA6B9BC,EAAiB,SAACjB,GAAD,OAChB,cAAC,IAAD,CACEkB,SAAUlB,EAAMkB,SAChBC,SAAUnB,EAAMmB,SAChBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,WAA3B,OACN,uBAAML,SAAUG,EAAhB,UACH,8BACA,cAAC,IAAD,CACAb,KAAK,iBACLgB,UAAYC,IACZN,SAAUnB,EAAMmB,SAChBO,YAAY,yBAEpB,8BACI,wBAAQC,KAAK,SAASC,SAAUL,GAAcD,EAA9C,mCAOWO,EAhDC,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,WAAYrC,EAAY,EAAZA,OAEnCD,EAAQqC,EACRE,EAAkBvC,EAAMwC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY3B,KAAM2B,EAAE3B,KAAiBD,GAAI4B,EAAE5B,IAAZ4B,EAAE5B,OAC1E6B,EAAmB3C,EAAM4C,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAE/B,OAQnF,OAAc,IAAXb,EAAyB,cAAC,IAAD,CAAUO,GAAI,WAGtC,sBAAKQ,UAAWC,IAAMuB,QAAtB,UACI,qBAAKxB,UAAWC,IAAM6B,aAAtB,SACKP,IAEL,sBAAKvB,UAAWC,IAAM2B,SAAtB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAgBlB,SAdb,SAACsB,GACZT,EAAWS,EAAOC,gBAClBD,EAAOC,eAAiB,IAYoBtB,SAAUuB,YAAkBC,IAAU5B,YCZ3E6B,sBACXzC,aAfkB,SAACV,GACnB,MAAO,CACHqC,YAAarC,EAAMqC,gBAIF,SAACe,GACtB,MAAO,CACHd,WAAY,SAACU,GACTI,EAASC,YAAkBL,SAOnC7C,IAFWgD,CAEOf","file":"static/js/5.5ce3ce7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth\r\n  });\r\n  \r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1GVSF\",\"dialogsItems\":\"Dialogs_dialogsItems__2Dw2k\",\"active\":\"Dialogs_active__Poj_H\",\"dialog\":\"Dialogs_dialog__3j38J\",\"messages\":\"Dialogs_messages__YGGBv\",\"message\":\"Dialogs_message__1SYyG\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    return <div className={style.dialog + ' ' + style.active}>\r\n    <NavLink to={\"/dialog/\" + id}>{name}</NavLink>\r\n</div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n\r\n    return <div className={style.dialog}>{message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Textarea } from '../common/Forms/formsControl';\r\nimport { composeValidators, maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst Dialogs = ({dialogsPage, addMessage, isAuth}) => {\r\n    \r\n    let state = dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n\r\n    let onSubmit = (values) => {\r\n        addMessage(values.newMessageBody);\r\n        values.newMessageBody = '';\r\n    }\r\n\r\n    if(isAuth === false) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={onSubmit} validate={composeValidators(required, maxLength100 )}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => (\r\n       <Form\r\n         onSubmit={props.onSubmit}\r\n         validate={props.validate}\r\n         render={({ handleSubmit, pristine, submitting }) => (\r\n           <form onSubmit={handleSubmit}>\r\n        <div>\r\n        <Field \r\n        name=\"newMessageBody\" \r\n        component={ Textarea }\r\n        validate={props.validate}\r\n        placeholder=\"Enter your message\"/>\r\n        </div>\r\n<div>\r\n    <button type=\"submit\" disabled={submitting || pristine}>Send message</button>\r\n    </div>\r\n</form>\r\n       )}\r\n    />\r\n   )\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageCreator } from '../../redux/messages-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)"],"sourceRoot":""}