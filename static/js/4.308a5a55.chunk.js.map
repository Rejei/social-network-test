{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js","hoc/withAuthRedirect.jsx"],"names":["module","exports","DialogItem","id","name","className","style","dialog","active","to","Message","message","maxLength100","maxLengthCreator","AddMessageForm","props","onSubmit","validate","render","handleSubmit","pristine","submitting","component","Textarea","placeholder","type","disabled","Dialogs","dialogsPage","addMessage","isAuth","state","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","newMessageBody","composeValidators","required","compose","connect","dispatch","addMessageCreator","withAuthRedirect","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,0HCUpMC,EANI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACrB,OAAO,qBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,OAA3C,SACP,cAAC,IAAD,CAASC,GAAI,WAAaN,EAA1B,SAA+BC,OCCpBM,EALC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEd,OAAO,qBAAKN,UAAWC,IAAMC,OAAtB,SAA+BI,K,wBCItCC,EAAeC,YAAiB,KA6B9BC,EAAiB,SAACC,GAAD,OAChB,cAAC,IAAD,CACEC,SAAUD,EAAMC,SAChBC,SAAUF,EAAME,SAChBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,WAA3B,OACN,uBAAML,SAAUG,EAAhB,UACH,8BACA,cAAC,IAAD,CACAf,KAAK,iBACLkB,UAAYC,IACZN,SAAUF,EAAME,SAChBO,YAAY,yBAEpB,8BACI,wBAAQC,KAAK,SAASC,SAAUL,GAAcD,EAA9C,mCAOWO,EAhDC,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,OAEnCC,EAAQH,EACRI,EAAkBD,EAAME,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAY/B,KAAM+B,EAAE/B,KAAiBD,GAAIgC,EAAEhC,IAAZgC,EAAEhC,OAC1EiC,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,SAAc2B,EAAEnC,OAQnF,OAAc,IAAX2B,EAAyB,cAAC,IAAD,CAAUrB,GAAI,WAGtC,sBAAKJ,UAAWC,IAAM2B,QAAtB,UACI,qBAAK5B,UAAWC,IAAMiC,aAAtB,SACKP,IAEL,sBAAK3B,UAAWC,IAAM+B,SAAtB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAgBpB,SAdb,SAACwB,GACZX,EAAWW,EAAOC,gBAClBD,EAAOC,eAAiB,IAYoBxB,SAAUyB,YAAkBC,IAAU/B,YCZ3EgC,sBACXC,aAfkB,SAACd,GACnB,MAAO,CACHH,YAAaG,EAAMH,gBAIF,SAACkB,GACtB,MAAO,CACHjB,WAAY,SAACY,GACTK,EAASC,YAAkBN,SAOnCO,IAFWJ,CAEOjB,I,mJCjBlBsB,EAA6B,SAAClB,GAAD,MAAY,CAEzCD,OAAQC,EAAMmB,KAAKpB,SAGVkB,EAAmB,SAACG,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKtC,MAAMe,OACR,cAACqB,EAAD,eAAeE,KAAKtC,QADG,cAAC,IAAD,CAAUN,GAAI,eAJT,GAEX6C,IAAMH,WAStC,OAFmCN,YAAQI,EAARJ,CAAoCO","file":"static/js/4.308a5a55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1GVSF\",\"dialogsItems\":\"Dialogs_dialogsItems__2Dw2k\",\"active\":\"Dialogs_active__Poj_H\",\"dialog\":\"Dialogs_dialog__3j38J\",\"messages\":\"Dialogs_messages__YGGBv\",\"message\":\"Dialogs_message__1SYyG\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    return <div className={style.dialog + ' ' + style.active}>\r\n    <NavLink to={\"/dialog/\" + id}>{name}</NavLink>\r\n</div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = ({message}) => {\r\n\r\n    return <div className={style.dialog}>{message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { Textarea } from '../common/Forms/formsControl';\r\nimport { composeValidators, maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nlet maxLength100 = maxLengthCreator(100)\r\n\r\nconst Dialogs = ({dialogsPage, addMessage, isAuth}) => {\r\n    \r\n    let state = dialogsPage\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n\r\n    let onSubmit = (values) => {\r\n        addMessage(values.newMessageBody);\r\n        values.newMessageBody = '';\r\n    }\r\n\r\n    if(isAuth === false) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={onSubmit} validate={composeValidators(required, maxLength100 )}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => (\r\n       <Form\r\n         onSubmit={props.onSubmit}\r\n         validate={props.validate}\r\n         render={({ handleSubmit, pristine, submitting }) => (\r\n           <form onSubmit={handleSubmit}>\r\n        <div>\r\n        <Field \r\n        name=\"newMessageBody\" \r\n        component={ Textarea }\r\n        validate={props.validate}\r\n        placeholder=\"Enter your message\"/>\r\n        </div>\r\n<div>\r\n    <button type=\"submit\" disabled={submitting || pristine}>Send message</button>\r\n    </div>\r\n</form>\r\n       )}\r\n    />\r\n   )\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageCreator } from '../../redux/messages-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreator(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth\r\n  });\r\n  \r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n}"],"sourceRoot":""}