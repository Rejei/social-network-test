{"version":3,"sources":["components/Messenger/Messenger.module.scss","../node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","../node_modules/semantic-ui-react/dist/es/elements/List/List.js","components/common/Forms/AddMessageForm.jsx","../node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../node_modules/react-use/esm/useMeasure.js","components/Messenger/ChatMessage.jsx","components/Messenger/ChatMessages.jsx","components/Messenger/Chatroom.jsx"],"names":["module","exports","ListDescription","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","create","createShorthandFactory","ListHeader","ListContent","description","floated","header","verticalAlign","useValueAndKey","useVerticalAlignProp","ListIcon","Icon","name","ListItem","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","handleClick","e","disabled","_invoke","_inheritsLoose","prototype","render","_this$props","active","icon","image","value","useKeyOnly","valueProp","role","onClick","iconElement","autoGenerateKey","imageElement","Image","isValidElement","_isPlainObject","defaultProps","headerElement","descriptionElement","Component","ListList","List","handleItemOverrides","predefinedProps","itemProps","_this2","animated","bulleted","celled","divided","horizontal","inverted","items","link","ordered","relaxed","selection","size","useKeyOrValueAndKey","_map","item","overrideProps","Content","Description","Header","Item","AddMessageForm","dispatch","useDispatch","status","useSelector","state","messenger","onSubmit","newMessage","sendMessage","validate","handleSubmit","form","pristine","submitting","values","reset","event","a","component","Textarea","placeholder","userName","Button","type","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","defaultState","x","y","width","height","top","left","bottom","right","window","ResizeObserver","_a","useState","element","ref","_b","rect","setRect","observer","useMemo","entries","contentRect","top_1","observe","disconnect","noop","ChatMessage","memo","message","styles","messageAuthor","v1","ChatMessages","messages","isAutoScrolled","setIsAutoScrolled","useMeasure","pageYOffset","useWindowScroll","scrollTo","behavior","map","m","id","Chatroom","isAuth","uniqueChatters","chatter","userId","photo","join","unique","Set","el","split","author","setAuthor","to","chatroom","users","src","addMessage"],"mappings":"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","file":"static/js/6.2a06226c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatroom\":\"Messenger_chatroom__3Rq-N\",\"users\":\"Messenger_users__1bfPX\",\"content\":\"Messenger_content__1ku77\",\"addMessage\":\"Messenger_addMessage__2MCCP\",\"messages\":\"Messenger_messages__3vBFz\",\"message\":\"Messenger_message__1n6Ex\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return /*#__PURE__*/React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ListItem, _Component);\n\n  function ListItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = ListItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        description = _this$props.description,\n        disabled = _this$props.disabled,\n        header = _this$props.header,\n        icon = _this$props.icon,\n        image = _this$props.image,\n        value = _this$props.value;\n    var ElementType = getElementType(ListItem, this.props);\n    var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n    var rest = getUnhandledProps(ListItem, this.props);\n    var valueProp = ElementType === 'li' ? {\n      value: value\n    } : {\n      'data-value': value\n    };\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), children);\n    }\n\n    var iconElement = ListIcon.create(icon, {\n      autoGenerateKey: false\n    });\n    var imageElement = Image.create(image, {\n      autoGenerateKey: false\n    }); // See description of `content` prop for explanation about why this is necessary.\n\n    if (! /*#__PURE__*/isValidElement(content) && _isPlainObject(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, ListContent.create(content, {\n        autoGenerateKey: false,\n        defaultProps: {\n          header: header,\n          description: description\n        }\n      }));\n    }\n\n    var headerElement = ListHeader.create(header, {\n      autoGenerateKey: false\n    });\n    var descriptionElement = ListDescription.create(description, {\n      autoGenerateKey: false\n    });\n\n    if (iconElement || imageElement) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && /*#__PURE__*/React.createElement(ListContent, null, headerElement, descriptionElement, content));\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n      role: \"listitem\",\n      className: classes,\n      onClick: this.handleClick\n    }, rest), headerElement, descriptionElement, content);\n  };\n\n  return ListItem;\n}(Component);\n\nListItem.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"];\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list item can active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: PropTypes.func,\n\n  /** A value for an ordered list. */\n  value: PropTypes.string\n} : {};\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(List, _Component);\n\n  function List() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleItemOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = List.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        animated = _this$props.animated,\n        bulleted = _this$props.bulleted,\n        celled = _this$props.celled,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        divided = _this$props.divided,\n        floated = _this$props.floated,\n        horizontal = _this$props.horizontal,\n        inverted = _this$props.inverted,\n        items = _this$props.items,\n        link = _this$props.link,\n        ordered = _this$props.ordered,\n        relaxed = _this$props.relaxed,\n        selection = _this$props.selection,\n        size = _this$props.size,\n        verticalAlign = _this$props.verticalAlign;\n    var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n    var rest = getUnhandledProps(List, this.props);\n    var ElementType = getElementType(List, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({\n      role: \"list\",\n      className: classes\n    }, rest), _map(items, function (item) {\n      return ListItem.create(item, {\n        overrideProps: _this2.handleItemOverrides\n      });\n    }));\n  };\n\n  return List;\n}(Component);\n\nList.handledProps = [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"];\nList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: PropTypes.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: PropTypes.bool,\n\n  /** A list can divide its items into cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A list can show divisions between content. */\n  divided: PropTypes.bool,\n\n  /** An list can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: PropTypes.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: PropTypes.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: PropTypes.bool,\n\n  /** A list can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nList.Content = ListContent;\nList.Description = ListDescription;\nList.Header = ListHeader;\nList.Icon = ListIcon;\nList.Item = ListItem;\nList.List = ListList;\nexport default List;","import React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { sendMessage } from '../../../redux/messenger-reducer';\r\nimport { Textarea } from './formsControl';\r\n\r\nconst AddMessageForm = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const status = useSelector(state => state.messenger.status)\r\n\r\n    const onSubmit = ({ newMessage }) => {\r\n        if (!newMessage) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(newMessage));\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={props.validate}\r\n            render={({ handleSubmit, form, pristine, submitting, values, reset }) => (\r\n                <form\r\n                    onSubmit={async event => {\r\n                        await handleSubmit(event)\r\n                        form.reset()\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Field\r\n                            name=\"newMessage\"\r\n                            component={Textarea}\r\n                            placeholder='Enter your message'\r\n                            userName={props.userName}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button type=\"submit\" disabled={status !== 'ready' || pristine || submitting} >Send message</Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddMessageForm","import { useEffect, useLayoutEffect } from 'react';\nimport { isBrowser } from './misc/util';\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isBrowser, noop } from './misc/util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nfunction useMeasure() {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n}\nexport default isBrowser && typeof window.ResizeObserver !== 'undefined'\n    ? useMeasure\n    : (function () { return [noop, defaultState]; });\n","import React from 'react';\r\nimport styles from './Messenger.module.scss';\r\nimport { v1 } from \"uuid\";\r\n\r\nconst ChatMessage = React.memo(({ message, onClick }) => {\r\n\r\n    const handleClick = () => {\r\n\r\n        onClick(`${message.userName}`, `${v1()}`)\r\n    }\r\n\r\n    return <div className={styles.message}>\r\n        <label className={styles.messageAuthor} onClick={handleClick}><b>{message.userName}</b></label>\r\n        <span>{message.message}</span>\r\n        <div className='ui divider'></div>\r\n    </div>\r\n})\r\n\r\nexport default ChatMessage;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMeasure, useWindowScroll } from 'react-use';\r\nimport ChatMessage from './ChatMessage';\r\nimport styles from './Messenger.module.scss';\r\n\r\n\r\nconst ChatMessages = ({onClick}) => {\r\n\r\n    const messages = useSelector(state => state.messenger.messages);\r\n    const [isAutoScrolled, setIsAutoScrolled] = useState(true);\r\n    const [ref, { height }] = useMeasure();\r\n    const { y: pageYOffset } = useWindowScroll();\r\n\r\n    useEffect(() => {\r\n        const scroll = () => {\r\n            if (height - pageYOffset < 2000) {\r\n                !isAutoScrolled && setIsAutoScrolled(true)\r\n            } else {\r\n                isAutoScrolled && setIsAutoScrolled(false)\r\n            }\r\n        }\r\n        scroll()\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAutoScrolled) {\r\n            window.scrollTo({ top: height, behavior: 'smooth' })\r\n        }\r\n    }, [isAutoScrolled, height, messages])\r\n\r\n    return <div className={styles.messages} ref={ref} >\r\n        {messages.map((m) => {\r\n\r\n            return <ChatMessage key={m.id} message={m} onClick={onClick} />\r\n        })}\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default ChatMessages;","import React, {  useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Image, List } from 'semantic-ui-react';\r\nimport AddMessageForm from '../common/Forms/AddMessageForm';\r\nimport ChatMessages from './ChatMessages';\r\nimport styles from './Messenger.module.scss';\r\n\r\nconst Chatroom = ({ isAuth }) => {\r\n\r\n    const status = useSelector(state => state.messenger.status)\r\n    const uniqueChatters = useSelector(state => {\r\n        const chatter = state.messenger.messages.map(m => {\r\n            return [m.userName, m.userId, m.photo].join(' + ')\r\n        })\r\n        const unique = new Set(chatter)\r\n        return [...unique].map(el => el.split(' + '))\r\n    })\r\n\r\n    const [author, setAuthor] = useState([])\r\n\r\n    const onClickHandler = (name, id) => {\r\n        setAuthor([name, id])\r\n    }\r\n\r\n\r\n\r\n\r\n    if (isAuth === false) return <Redirect to=\"/login\" />\r\n\r\n    return (\r\n        <div className={styles.chatroom}>\r\n            <div className={styles.users}>{uniqueChatters.map(el => {\r\n                return <List>\r\n                    <List.Item>\r\n                        <Image src={el[2]} />\r\n                        <List.Content>\r\n                            <List.Header><NavLink to={`/profile/${el[1]}`}>{el[0]}</NavLink></List.Header>\r\n                        </List.Content>\r\n                    </List.Item>\r\n                </List>\r\n            })\r\n            }</div>\r\n            <div className={styles.content}>\r\n                {status === 'error' && <div>Some Error</div>}\r\n                <div >\r\n                    <ChatMessages onClick={onClickHandler} />\r\n                    <div className={styles.addMessage}><AddMessageForm userName={author} /></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatroom;"],"sourceRoot":""}