{"version":3,"sources":["components/Messenger/Messenger.module.scss","hoc/withAuthRedirect.jsx","../node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","../node_modules/semantic-ui-react/dist/es/elements/List/List.js","components/Messenger/Messenger.jsx","components/Messenger/MessengerContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ListDescription","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","create","createShorthandFactory","ListHeader","ListContent","description","floated","header","verticalAlign","useValueAndKey","useVerticalAlignProp","ListIcon","Icon","name","ListItem","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleClick","e","disabled","_invoke","_inheritsLoose","prototype","render","_this$props","active","icon","image","value","useKeyOnly","valueProp","role","onClick","iconElement","autoGenerateKey","imageElement","Image","isValidElement","_isPlainObject","defaultProps","headerElement","descriptionElement","ListList","List","handleItemOverrides","predefinedProps","itemProps","_this2","animated","bulleted","celled","divided","horizontal","inverted","items","link","ordered","relaxed","selection","size","useKeyOrValueAndKey","_map","item","overrideProps","Content","Description","Header","Item","Messenger","listMessages","pathname","styles","segmentChatWrapper","src","photo","alt","as","userName","message","Preloader","MessengerContainer","compose","console","log","messenger","messages","dispatch"],"mappings":"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","file":"static/js/5.bbe13236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatroom\":\"Messenger_chatroom__3Rq-N\",\"users\":\"Messenger_users__1bfPX\",\"content\":\"Messenger_content__1ku77\",\"addMessage\":\"Messenger_addMessage__2MCCP\",\"messages\":\"Messenger_messages__3vBFz\",\"message\":\"Messenger_message__1n6Ex\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\r\n    isAuth: state.auth.isAuth\r\n  });\r\n  \r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n      \r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return /*#__PURE__*/React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ListItem, _Component);\n\n  function ListItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    };\n\n    return _this;\n  }\n\n  var _proto = ListItem.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        description = _this$props.description,\n        disabled = _this$props.disabled,\n        header = _this$props.header,\n        icon = _this$props.icon,\n        image = _this$props.image,\n        value = _this$props.value;\n    var ElementType = getElementType(ListItem, this.props);\n    var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n    var rest = getUnhandledProps(ListItem, this.props);\n    var valueProp = ElementType === 'li' ? {\n      value: value\n    } : {\n      'data-value': value\n    };\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), children);\n    }\n\n    var iconElement = ListIcon.create(icon, {\n      autoGenerateKey: false\n    });\n    var imageElement = Image.create(image, {\n      autoGenerateKey: false\n    }); // See description of `content` prop for explanation about why this is necessary.\n\n    if (! /*#__PURE__*/isValidElement(content) && _isPlainObject(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, ListContent.create(content, {\n        autoGenerateKey: false,\n        defaultProps: {\n          header: header,\n          description: description\n        }\n      }));\n    }\n\n    var headerElement = ListHeader.create(header, {\n      autoGenerateKey: false\n    });\n    var descriptionElement = ListDescription.create(description, {\n      autoGenerateKey: false\n    });\n\n    if (iconElement || imageElement) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && /*#__PURE__*/React.createElement(ListContent, null, headerElement, descriptionElement, content));\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, valueProp, {\n      role: \"listitem\",\n      className: classes,\n      onClick: this.handleClick\n    }, rest), headerElement, descriptionElement, content);\n  };\n\n  return ListItem;\n}(Component);\n\nListItem.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"];\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list item can active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: PropTypes.func,\n\n  /** A value for an ordered list. */\n  value: PropTypes.string\n} : {};\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(List, _Component);\n\n  function List() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleItemOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = List.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        animated = _this$props.animated,\n        bulleted = _this$props.bulleted,\n        celled = _this$props.celled,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content,\n        divided = _this$props.divided,\n        floated = _this$props.floated,\n        horizontal = _this$props.horizontal,\n        inverted = _this$props.inverted,\n        items = _this$props.items,\n        link = _this$props.link,\n        ordered = _this$props.ordered,\n        relaxed = _this$props.relaxed,\n        selection = _this$props.selection,\n        size = _this$props.size,\n        verticalAlign = _this$props.verticalAlign;\n    var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n    var rest = getUnhandledProps(List, this.props);\n    var ElementType = getElementType(List, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({\n      role: \"list\",\n      className: classes\n    }, rest), _map(items, function (item) {\n      return ListItem.create(item, {\n        overrideProps: _this2.handleItemOverrides\n      });\n    }));\n  };\n\n  return List;\n}(Component);\n\nList.handledProps = [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"];\nList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: PropTypes.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: PropTypes.bool,\n\n  /** A list can divide its items into cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A list can show divisions between content. */\n  divided: PropTypes.bool,\n\n  /** An list can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: PropTypes.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: PropTypes.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: PropTypes.bool,\n\n  /** A list can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nList.Content = ListContent;\nList.Description = ListDescription;\nList.Header = ListHeader;\nList.Icon = ListIcon;\nList.Item = ListItem;\nList.List = ListList;\nexport default List;","import React from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { Image, List } from 'semantic-ui-react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport styles from './Messenger.module.scss';\r\n\r\n\r\nconst Messenger = ({ listMessages, isAuth }) => {\r\n\r\n    if(isAuth === false) return <Redirect to=\"/login\" />\r\n\r\n    if(!listMessages){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <NavLink to={{\r\n            pathname: '/messenger/chatroom'\r\n        }}\r\n            className={styles.segmentChatWrapper}>\r\n            <List className='segmentChat'>\r\n                <List.Item className='dialogsAvatar'>\r\n                    <Image src={listMessages.photo} alt='avatar' />\r\n                    <List.Content>\r\n                        <List.Header as='span'>{listMessages.userName}</List.Header>\r\n                        <List.Description>\r\n                            {listMessages.message}\r\n                        </List.Description>\r\n                    </List.Content>\r\n                </List.Item>\r\n            </List>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Messenger;","import { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport Messenger from './Messenger';\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        listMessages: state.messenger.messages,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n        console.log(dispatch)\r\n        return {\r\n\r\n        }\r\n}\r\n\r\nconst MessengerContainer = compose(connect(mapStateToProps, mapDispatchToProps), \r\n                                    withAuthRedirect)(Messenger);\r\n\r\nexport default MessengerContainer;"],"sourceRoot":""}